import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        java.lang.Class<?> wildcardClass1 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray2 = new int[] { (short) 0 };
        int[] intArray3 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double4 = arrayAverage0.computeAverage(intArray2, intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray3);
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { 'a', (byte) -1, 'a', (byte) 10, '#', (-1) };
        int[] intArray10 = new int[] { (short) 0, (-1) };
        // The following exception was thrown during execution in test generation
        try {
            double double11 = arrayAverage0.computeAverage(intArray7, intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray4 = new int[] { 1, (short) 1, 1 };
        int[] intArray5 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double6 = arrayAverage0.computeAverage(intArray4, intArray5);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = new int[] {};
        int[] intArray6 = new int[] { 'a', 'a', 'a', (short) 10 };
        // The following exception was thrown during execution in test generation
        try {
            double double7 = arrayAverage0.computeAverage(intArray1, intArray6);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (-1), (byte) 0, (short) -1, ' ', 'a' };
        int[] intArray10 = new int[] { (byte) -1, 100, 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double11 = arrayAverage0.computeAverage(intArray6, intArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        int[] intArray7 = new int[] { (byte) 1, (short) 10, (byte) -1, '#', (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            double double8 = arrayAverage0.computeAverage(intArray1, intArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.lang.Object obj0 = new java.lang.Object();
        java.lang.Class<?> wildcardClass1 = obj0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass1);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray3 = new int[] { (byte) 100, (short) 10 };
        int[] intArray8 = new int[] { (byte) 100, (short) 0, (byte) 0, (short) -1 };
        // The following exception was thrown during execution in test generation
        try {
            double double9 = arrayAverage0.computeAverage(intArray3, intArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray2 = new int[] { (short) 10 };
        int[] intArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double4 = arrayAverage0.computeAverage(intArray2, intArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray2);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        java.lang.Class<?> wildcardClass12 = intArray10.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        int[] intArray13 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double14 = arrayAverage0.computeAverage(intArray6, intArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray2 = new int[] { (short) 100 };
        int[] intArray8 = new int[] { 10, (-1), (byte) 100, (short) 0, (byte) 1 };
        // The following exception was thrown during execution in test generation
        try {
            double double9 = arrayAverage0.computeAverage(intArray2, intArray8);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        java.lang.Class<?> wildcardClass73 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        java.lang.Class<?> wildcardClass55 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        java.lang.Class<?> wildcardClass55 = intArray40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        java.lang.Class<?> wildcardClass73 = intArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        java.lang.Class<?> wildcardClass30 = intArray17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        java.lang.Class<?> wildcardClass12 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        int[] intArray64 = new int[] { 100, '#', 'a', 10 };
        double double65 = arrayAverage36.computeAverage(intArray53, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        nonuniform.ArrayAverage arrayAverage78 = new nonuniform.ArrayAverage();
        int[] intArray83 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray88 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double89 = arrayAverage78.computeAverage(intArray83, intArray88);
        int[] intArray94 = new int[] { 100, '#', 'a', 10 };
        double double95 = arrayAverage66.computeAverage(intArray83, intArray94);
        double double96 = arrayAverage24.computeAverage(intArray53, intArray83);
        double double97 = arrayAverage0.computeAverage(intArray22, intArray53);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 31.0d + "'", double65 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 31.0d + "'", double95 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        java.lang.Class<?> wildcardClass55 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        java.lang.Class<?> wildcardClass55 = intArray52.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        int[] intArray64 = new int[] { 100, '#', 'a', 10 };
        double double65 = arrayAverage36.computeAverage(intArray53, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        nonuniform.ArrayAverage arrayAverage78 = new nonuniform.ArrayAverage();
        int[] intArray83 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray88 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double89 = arrayAverage78.computeAverage(intArray83, intArray88);
        int[] intArray94 = new int[] { 100, '#', 'a', 10 };
        double double95 = arrayAverage66.computeAverage(intArray83, intArray94);
        double double96 = arrayAverage24.computeAverage(intArray53, intArray83);
        double double97 = arrayAverage0.computeAverage(intArray22, intArray53);
        java.lang.Class<?> wildcardClass98 = intArray22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 31.0d + "'", double65 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 31.0d + "'", double95 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray31 = new int[] { (short) 100 };
        int[] intArray32 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double33 = arrayAverage0.computeAverage(intArray31, intArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        java.lang.Class<?> wildcardClass73 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        java.lang.Class<?> wildcardClass30 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        int[] intArray64 = new int[] { 100, '#', 'a', 10 };
        double double65 = arrayAverage36.computeAverage(intArray53, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        nonuniform.ArrayAverage arrayAverage78 = new nonuniform.ArrayAverage();
        int[] intArray83 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray88 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double89 = arrayAverage78.computeAverage(intArray83, intArray88);
        int[] intArray94 = new int[] { 100, '#', 'a', 10 };
        double double95 = arrayAverage66.computeAverage(intArray83, intArray94);
        double double96 = arrayAverage24.computeAverage(intArray53, intArray83);
        double double97 = arrayAverage0.computeAverage(intArray22, intArray53);
        java.lang.Class<?> wildcardClass98 = intArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 31.0d + "'", double65 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double89 + "' != '" + 0.0d + "'", double89 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 31.0d + "'", double95 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray24 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double25 = arrayAverage0.computeAverage(intArray22, intArray24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        java.lang.Class<?> wildcardClass30 = intArray28.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        java.lang.Class<?> wildcardClass12 = intArray5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray60, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        java.lang.Class<?> wildcardClass37 = intArray22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray82);
        int[] intArray85 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray70, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray52.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray35, intArray89);
        java.lang.Class<?> wildcardClass98 = intArray89.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray35, intArray89);
        java.lang.Class<?> wildcardClass98 = intArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray35, intArray89);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray60, intArray77);
        java.lang.Class<?> wildcardClass80 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        java.lang.Class<?> wildcardClass37 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray60, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray94);
        java.lang.Class<?> wildcardClass98 = intArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        java.lang.Class<?> wildcardClass55 = intArray40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        int[] intArray55 = null;
        int[] intArray58 = new int[] { 0, 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double59 = arrayAverage0.computeAverage(intArray55, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        java.lang.Class<?> wildcardClass37 = intArray34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray94);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray94);
        java.lang.Class<?> wildcardClass98 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        int[] intArray69 = new int[] { (byte) 10, ' ' };
        // The following exception was thrown during execution in test generation
        try {
            double double70 = arrayAverage0.computeAverage(intArray60, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray65, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray65, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        // The following exception was thrown during execution in test generation
        try {
            double double14 = arrayAverage0.computeAverage(intArray1, intArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        int[] intArray54 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray59 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double60 = arrayAverage49.computeAverage(intArray54, intArray59);
        int[] intArray65 = new int[] { 100, '#', 'a', 10 };
        double double66 = arrayAverage37.computeAverage(intArray54, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage37.computeAverage(intArray77, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray89, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 31.0d + "'", double66 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray65, intArray84);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        double double37 = arrayAverage1.computeAverage(intArray23, intArray35);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        int[] intArray66 = new int[] { 100, '#', 'a', 10 };
        double double67 = arrayAverage38.computeAverage(intArray55, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage38.computeAverage(intArray78, intArray85);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray78);
        java.lang.Class<?> wildcardClass94 = intArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 31.0d + "'", double67 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        double double37 = arrayAverage1.computeAverage(intArray23, intArray35);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        int[] intArray66 = new int[] { 100, '#', 'a', 10 };
        double double67 = arrayAverage38.computeAverage(intArray55, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage38.computeAverage(intArray78, intArray85);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray78);
        java.lang.Class<?> wildcardClass94 = intArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 31.0d + "'", double67 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray64);
        int[] intArray69 = new int[] { 10, (byte) 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double70 = arrayAverage0.computeAverage(intArray64, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        java.lang.Class<?> wildcardClass44 = intArray41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        double double37 = arrayAverage1.computeAverage(intArray23, intArray35);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        int[] intArray66 = new int[] { 100, '#', 'a', 10 };
        double double67 = arrayAverage38.computeAverage(intArray55, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage38.computeAverage(intArray78, intArray85);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray78);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 31.0d + "'", double67 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        int[] intArray54 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray59 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double60 = arrayAverage49.computeAverage(intArray54, intArray59);
        int[] intArray65 = new int[] { 100, '#', 'a', 10 };
        double double66 = arrayAverage37.computeAverage(intArray54, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage37.computeAverage(intArray77, intArray84);
        int[] intArray92 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray77, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 31.0d + "'", double66 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray92);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        java.lang.Class<?> wildcardClass51 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        java.lang.Class<?> wildcardClass44 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        int[] intArray37 = null;
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        double double74 = arrayAverage38.computeAverage(intArray60, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray37, intArray60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 100.0d + "'", double74 == 100.0d);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        int[] intArray55 = null;
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = arrayAverage0.computeAverage(intArray55, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        int[] intArray55 = null;
        int[] intArray59 = new int[] { (byte) 0, (byte) 0, 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double60 = arrayAverage0.computeAverage(intArray55, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        java.lang.Class<?> wildcardClass73 = intArray40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        int[] intArray55 = null;
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = arrayAverage0.computeAverage(intArray55, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        java.lang.Class<?> wildcardClass73 = intArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        double double48 = arrayAverage12.computeAverage(intArray34, intArray46);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        int[] intArray90 = new int[] { 100, '#', 'a', 10 };
        double double91 = arrayAverage62.computeAverage(intArray79, intArray90);
        double double92 = arrayAverage49.computeAverage(intArray55, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray34, intArray55);
        java.lang.Class<?> wildcardClass94 = intArray34.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 31.0d + "'", double91 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        java.lang.Class<?> wildcardClass51 = intArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        int[] intArray82 = new int[] { 100, '#', 'a', 10 };
        double double83 = arrayAverage54.computeAverage(intArray71, intArray82);
        double double84 = arrayAverage12.computeAverage(intArray52, intArray82);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray52, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 31.0d + "'", double83 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 40.0d + "'", double84 == 40.0d);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        double double48 = arrayAverage12.computeAverage(intArray34, intArray46);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        int[] intArray90 = new int[] { 100, '#', 'a', 10 };
        double double91 = arrayAverage62.computeAverage(intArray79, intArray90);
        double double92 = arrayAverage49.computeAverage(intArray55, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray34, intArray55);
        java.lang.Class<?> wildcardClass94 = intArray55.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 31.0d + "'", double91 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        java.lang.Class<?> wildcardClass44 = intArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        double double48 = arrayAverage12.computeAverage(intArray34, intArray46);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        int[] intArray90 = new int[] { 100, '#', 'a', 10 };
        double double91 = arrayAverage62.computeAverage(intArray79, intArray90);
        double double92 = arrayAverage49.computeAverage(intArray55, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray34, intArray55);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 100.0d + "'", double48 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 31.0d + "'", double91 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray41, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        java.lang.Class<?> wildcardClass73 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray41, intArray73);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray41, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray41.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage43.computeAverage(intArray65, intArray77);
        double double80 = arrayAverage30.computeAverage(intArray41, intArray65);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray41, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (short) -1, (short) 10, (byte) 100, 100, 10, '4' };
        nonuniform.ArrayAverage arrayAverage8 = new nonuniform.ArrayAverage();
        int[] intArray13 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray18 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double19 = arrayAverage8.computeAverage(intArray13, intArray18);
        nonuniform.ArrayAverage arrayAverage20 = new nonuniform.ArrayAverage();
        int[] intArray25 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray30 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double31 = arrayAverage20.computeAverage(intArray25, intArray30);
        int[] intArray36 = new int[] { 100, '#', 'a', 10 };
        double double37 = arrayAverage8.computeAverage(intArray25, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        double double62 = arrayAverage8.computeAverage(intArray48, intArray55);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        double double87 = arrayAverage8.computeAverage(intArray68, intArray85);
        // The following exception was thrown during execution in test generation
        try {
            double double88 = arrayAverage0.computeAverage(intArray7, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double19 + "' != '" + 0.0d + "'", double19 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 0.0d + "'", double31 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 31.0d + "'", double37 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        java.lang.Class<?> wildcardClass51 = intArray11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        double double80 = arrayAverage44.computeAverage(intArray66, intArray78);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray66, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        int[] intArray91 = new int[] { (short) 100, (short) 1, (byte) 10, 0, 'a', 1 };
        // The following exception was thrown during execution in test generation
        try {
            double double92 = arrayAverage0.computeAverage(intArray83, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray40, intArray82);
        java.lang.Class<?> wildcardClass98 = intArray82.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray40, intArray82);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        int[] intArray73 = null;
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray73, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        int[] intArray44 = new int[] {};
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        int[] intArray50 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray55 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double56 = arrayAverage45.computeAverage(intArray50, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            double double57 = arrayAverage0.computeAverage(intArray44, intArray50);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage12.computeAverage(intArray72, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray72, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        int[] intArray50 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray55 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double56 = arrayAverage45.computeAverage(intArray50, intArray55);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        int[] intArray85 = new int[] { 100, '#', 'a', 10 };
        double double86 = arrayAverage57.computeAverage(intArray74, intArray85);
        double double87 = arrayAverage44.computeAverage(intArray50, intArray85);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray85, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 31.0d + "'", double86 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 31.0d + "'", double87 == 31.0d);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray82);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray82);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray82);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 100.0d + "'", double84 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        int[] intArray91 = new int[] { 100, '#', 'a', 10 };
        double double92 = arrayAverage63.computeAverage(intArray80, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray61, intArray91);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 40.0d + "'", double93 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        int[] intArray91 = new int[] { 100, '#', 'a', 10 };
        double double92 = arrayAverage63.computeAverage(intArray80, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray61, intArray91);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 40.0d + "'", double93 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        int[] intArray91 = new int[] { 100, '#', 'a', 10 };
        double double92 = arrayAverage63.computeAverage(intArray80, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray61, intArray91);
        java.lang.Class<?> wildcardClass94 = intArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 40.0d + "'", double93 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        int[] intArray30 = new int[] { 100, '#', 'a', 10 };
        double double31 = arrayAverage2.computeAverage(intArray19, intArray30);
        nonuniform.ArrayAverage arrayAverage32 = new nonuniform.ArrayAverage();
        int[] intArray37 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray42 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double43 = arrayAverage32.computeAverage(intArray37, intArray42);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        double double56 = arrayAverage2.computeAverage(intArray42, intArray49);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        int[] intArray85 = new int[] { 100, '#', 'a', 10 };
        double double86 = arrayAverage57.computeAverage(intArray74, intArray85);
        double double87 = arrayAverage1.computeAverage(intArray42, intArray74);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray42, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.0d + "'", double31 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 31.0d + "'", double86 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        double double92 = arrayAverage42.computeAverage(intArray53, intArray77);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray53);
        java.lang.Class<?> wildcardClass94 = intArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray40, intArray82);
        java.lang.Class<?> wildcardClass98 = intArray40.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage31.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray29, intArray65);
        java.lang.Class<?> wildcardClass69 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 99.0d + "'", double68 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        double double92 = arrayAverage42.computeAverage(intArray53, intArray77);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray53);
        java.lang.Class<?> wildcardClass94 = intArray35.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        double double92 = arrayAverage42.computeAverage(intArray53, intArray77);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray53);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        java.lang.Class<?> wildcardClass55 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = arrayAverage0.computeAverage(intArray54, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage31.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray29, intArray65);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 99.0d + "'", double68 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray83, intArray90);
        java.lang.Class<?> wildcardClass98 = intArray83.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        java.lang.Class<?> wildcardClass55 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray30, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 90.0d + "'", double55 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage31.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray29, intArray65);
        java.lang.Class<?> wildcardClass69 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 99.0d + "'", double68 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        int[] intArray37 = null;
        int[] intArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double39 = arrayAverage0.computeAverage(intArray37, intArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        java.lang.Class<?> wildcardClass55 = intArray47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        int[] intArray8 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray13 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double14 = arrayAverage3.computeAverage(intArray8, intArray13);
        nonuniform.ArrayAverage arrayAverage15 = new nonuniform.ArrayAverage();
        int[] intArray20 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray25 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double26 = arrayAverage15.computeAverage(intArray20, intArray25);
        nonuniform.ArrayAverage arrayAverage27 = new nonuniform.ArrayAverage();
        int[] intArray32 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray37 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double38 = arrayAverage27.computeAverage(intArray32, intArray37);
        int[] intArray43 = new int[] { 100, '#', 'a', 10 };
        double double44 = arrayAverage15.computeAverage(intArray32, intArray43);
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        int[] intArray50 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray55 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double56 = arrayAverage45.computeAverage(intArray50, intArray55);
        double double57 = arrayAverage3.computeAverage(intArray32, intArray50);
        nonuniform.ArrayAverage arrayAverage58 = new nonuniform.ArrayAverage();
        int[] intArray63 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray68 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double69 = arrayAverage58.computeAverage(intArray63, intArray68);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        int[] intArray86 = new int[] { 100, '#', 'a', 10 };
        double double87 = arrayAverage58.computeAverage(intArray75, intArray86);
        double double88 = arrayAverage2.computeAverage(intArray50, intArray75);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray1, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.0d + "'", double44 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 90.0d + "'", double57 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 31.0d + "'", double87 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 90.0d + "'", double88 == 90.0d);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray30, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 90.0d + "'", double55 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray60, intArray77);
        int[] intArray80 = null;
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray80, intArray91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray83, intArray90);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        double double85 = arrayAverage13.computeAverage(intArray42, intArray72);
        double double86 = arrayAverage0.computeAverage(intArray11, intArray42);
        java.lang.Class<?> wildcardClass87 = intArray11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 90.0d + "'", double85 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray48.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        double double85 = arrayAverage13.computeAverage(intArray42, intArray72);
        double double86 = arrayAverage0.computeAverage(intArray11, intArray42);
        java.lang.Class<?> wildcardClass87 = intArray42.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 90.0d + "'", double85 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray83, intArray90);
        java.lang.Class<?> wildcardClass98 = intArray90.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray64);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray64);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray84.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        double double85 = arrayAverage13.computeAverage(intArray42, intArray72);
        double double86 = arrayAverage0.computeAverage(intArray11, intArray42);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 90.0d + "'", double85 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray30, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray48, intArray73);
        java.lang.Class<?> wildcardClass87 = intArray73.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 90.0d + "'", double55 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray72, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray98 = new int[] { (byte) 0, (byte) -1, (byte) 100, (short) 10, ' ', ' ' };
        // The following exception was thrown during execution in test generation
        try {
            double double99 = arrayAverage0.computeAverage(intArray77, intArray98);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray98);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray72, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage30.computeAverage(intArray52, intArray64);
        int[] intArray69 = new int[] { 'a', (short) 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double70 = arrayAverage0.computeAverage(intArray52, intArray69);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        double double87 = arrayAverage51.computeAverage(intArray73, intArray85);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray85, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray72, intArray95);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        double double86 = arrayAverage50.computeAverage(intArray72, intArray84);
        double double87 = arrayAverage37.computeAverage(intArray48, intArray72);
        int[] intArray88 = new int[] {};
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray48, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 100.0d + "'", double86 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 100.0d + "'", double87 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray88);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        int[] intArray55 = null;
        int[] intArray56 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double57 = arrayAverage0.computeAverage(intArray55, intArray56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        int[] intArray60 = new int[] { '#', (byte) 100, (short) 0, 0, (-1) };
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = arrayAverage0.computeAverage(intArray60, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray64);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        int[] intArray95 = new int[] { 100, '#', 'a', 10 };
        double double96 = arrayAverage67.computeAverage(intArray84, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray52, intArray84);
        java.lang.Class<?> wildcardClass98 = intArray52.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 100.0d + "'", double66 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 31.0d + "'", double96 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 0.0d + "'", double97 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        double double85 = arrayAverage31.computeAverage(intArray71, intArray78);
        double double86 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass87 = intArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray30 = null;
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        double double85 = arrayAverage31.computeAverage(intArray71, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray30, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 100.0d + "'", double85 == 100.0d);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray89, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        double double85 = arrayAverage31.computeAverage(intArray71, intArray78);
        double double86 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        double double85 = arrayAverage31.computeAverage(intArray71, intArray78);
        double double86 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass87 = intArray18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 90.0d + "'", double86 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray30 = null;
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        // The following exception was thrown during execution in test generation
        try {
            double double61 = arrayAverage0.computeAverage(intArray30, intArray59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray77);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray95.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray77);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray35 = new int[] { '4', (-1), (short) 0, 'a', (-1) };
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        double double72 = arrayAverage36.computeAverage(intArray58, intArray70);
        // The following exception was thrown during execution in test generation
        try {
            double double73 = arrayAverage0.computeAverage(intArray35, intArray58);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 100.0d + "'", double72 == 100.0d);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        int[] intArray55 = null;
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray55, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        double double84 = arrayAverage30.computeAverage(intArray70, intArray77);
        nonuniform.ArrayAverage arrayAverage85 = new nonuniform.ArrayAverage();
        int[] intArray90 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray95 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double96 = arrayAverage85.computeAverage(intArray90, intArray95);
        double double97 = arrayAverage0.computeAverage(intArray70, intArray95);
        java.lang.Class<?> wildcardClass98 = intArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 0.0d + "'", double96 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 100.0d + "'", double97 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        int[] intArray44 = null;
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage46 = new nonuniform.ArrayAverage();
        int[] intArray51 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray56 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double57 = arrayAverage46.computeAverage(intArray51, intArray56);
        nonuniform.ArrayAverage arrayAverage58 = new nonuniform.ArrayAverage();
        int[] intArray63 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray68 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double69 = arrayAverage58.computeAverage(intArray63, intArray68);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        int[] intArray86 = new int[] { 100, '#', 'a', 10 };
        double double87 = arrayAverage58.computeAverage(intArray75, intArray86);
        double double88 = arrayAverage45.computeAverage(intArray51, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray44, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 31.0d + "'", double87 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 31.0d + "'", double88 == 31.0d);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        double double68 = arrayAverage0.computeAverage(intArray18, intArray61);
        java.lang.Class<?> wildcardClass69 = intArray18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 90.0d + "'", double68 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage42.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray29, intArray64);
        java.lang.Class<?> wildcardClass80 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage42.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray29, intArray64);
        java.lang.Class<?> wildcardClass80 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        double double68 = arrayAverage0.computeAverage(intArray18, intArray61);
        java.lang.Class<?> wildcardClass69 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 90.0d + "'", double68 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        int[] intArray47 = new int[] { (byte) 100, 10, 1, (byte) 100, (byte) 100 };
        // The following exception was thrown during execution in test generation
        try {
            double double48 = arrayAverage0.computeAverage(intArray40, intArray47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage42.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray29, intArray64);
        java.lang.Class<?> wildcardClass80 = intArray64.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        double double68 = arrayAverage0.computeAverage(intArray18, intArray61);
        java.lang.Class<?> wildcardClass69 = intArray61.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 90.0d + "'", double68 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        int[] intArray55 = null;
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray55, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        int[] intArray72 = new int[] { 100, '#', 'a', 10 };
        double double73 = arrayAverage44.computeAverage(intArray61, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray72, intArray79);
        java.lang.Class<?> wildcardClass87 = intArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 31.0d + "'", double73 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 32.0d + "'", double86 == 32.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        int[] intArray72 = new int[] { 100, '#', 'a', 10 };
        double double73 = arrayAverage44.computeAverage(intArray61, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray72, intArray79);
        java.lang.Class<?> wildcardClass87 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 31.0d + "'", double73 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 32.0d + "'", double86 == 32.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        int[] intArray29 = new int[] { 100, '#', 'a', 10 };
        double double30 = arrayAverage1.computeAverage(intArray18, intArray29);
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        double double55 = arrayAverage1.computeAverage(intArray41, intArray48);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        int[] intArray84 = new int[] { 100, '#', 'a', 10 };
        double double85 = arrayAverage56.computeAverage(intArray73, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray41, intArray73);
        int[] intArray87 = null;
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray87, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double30 + "' != '" + 31.0d + "'", double30 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 31.0d + "'", double85 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        int[] intArray72 = new int[] { 100, '#', 'a', 10 };
        double double73 = arrayAverage44.computeAverage(intArray61, intArray72);
        nonuniform.ArrayAverage arrayAverage74 = new nonuniform.ArrayAverage();
        int[] intArray79 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray84 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double85 = arrayAverage74.computeAverage(intArray79, intArray84);
        double double86 = arrayAverage0.computeAverage(intArray72, intArray79);
        java.lang.Class<?> wildcardClass87 = intArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 31.0d + "'", double73 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 32.0d + "'", double86 == 32.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray60, intArray77);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray90, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        int[] intArray55 = null;
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray55, intArray90);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray41, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray77);
        java.lang.Class<?> wildcardClass80 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 90.0d + "'", double66 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        int[] intArray37 = null;
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        double double74 = arrayAverage38.computeAverage(intArray60, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray37, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 100.0d + "'", double74 == 100.0d);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray41, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 90.0d + "'", double66 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage60.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray58, intArray94);
        java.lang.Class<?> wildcardClass98 = intArray58.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage60.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray58, intArray94);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        int[] intArray54 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray59 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double60 = arrayAverage49.computeAverage(intArray54, intArray59);
        int[] intArray65 = new int[] { 100, '#', 'a', 10 };
        double double66 = arrayAverage37.computeAverage(intArray54, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage37.computeAverage(intArray77, intArray84);
        int[] intArray94 = new int[] { (short) -1, '4' };
        // The following exception was thrown during execution in test generation
        try {
            double double95 = arrayAverage0.computeAverage(intArray84, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 31.0d + "'", double66 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        int[] intArray58 = new int[] { 100, '#', 'a', 10 };
        double double59 = arrayAverage30.computeAverage(intArray47, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        nonuniform.ArrayAverage arrayAverage72 = new nonuniform.ArrayAverage();
        int[] intArray77 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray82 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double83 = arrayAverage72.computeAverage(intArray77, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage60.computeAverage(intArray82, intArray94);
        double double97 = arrayAverage0.computeAverage(intArray58, intArray94);
        java.lang.Class<?> wildcardClass98 = intArray94.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 31.0d + "'", double59 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 0.0d + "'", double83 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 100.0d + "'", double96 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 99.0d + "'", double97 == 99.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray41, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray77);
        java.lang.Class<?> wildcardClass80 = intArray77.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 90.0d + "'", double66 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray72, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass94 = intArray18.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        int[] intArray51 = null;
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        nonuniform.ArrayAverage arrayAverage76 = new nonuniform.ArrayAverage();
        int[] intArray81 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray86 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double87 = arrayAverage76.computeAverage(intArray81, intArray86);
        double double88 = arrayAverage52.computeAverage(intArray74, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray51, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 100.0d + "'", double88 == 100.0d);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        java.lang.Class<?> wildcardClass69 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        java.lang.Class<?> wildcardClass69 = intArray6.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage56.computeAverage(intArray78, intArray90);
        double double93 = arrayAverage0.computeAverage(intArray18, intArray78);
        java.lang.Class<?> wildcardClass94 = intArray78.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        int[] intArray91 = new int[] { 100, '#', 'a', 10 };
        double double92 = arrayAverage63.computeAverage(intArray80, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray61, intArray91);
        int[] intArray94 = null;
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray94, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 40.0d + "'", double93 == 40.0d);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray2 = new int[] { (short) 10 };
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        int[] intArray8 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray13 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double14 = arrayAverage3.computeAverage(intArray8, intArray13);
        nonuniform.ArrayAverage arrayAverage15 = new nonuniform.ArrayAverage();
        int[] intArray20 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray25 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double26 = arrayAverage15.computeAverage(intArray20, intArray25);
        int[] intArray31 = new int[] { 100, '#', 'a', 10 };
        double double32 = arrayAverage3.computeAverage(intArray20, intArray31);
        nonuniform.ArrayAverage arrayAverage33 = new nonuniform.ArrayAverage();
        int[] intArray38 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray43 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double44 = arrayAverage33.computeAverage(intArray38, intArray43);
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        int[] intArray50 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray55 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double56 = arrayAverage45.computeAverage(intArray50, intArray55);
        double double57 = arrayAverage3.computeAverage(intArray43, intArray55);
        // The following exception was thrown during execution in test generation
        try {
            double double58 = arrayAverage0.computeAverage(intArray2, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double32 + "' != '" + 31.0d + "'", double32 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 0.0d + "'", double44 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 100.0d + "'", double57 == 100.0d);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        int[] intArray8 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray13 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double14 = arrayAverage3.computeAverage(intArray8, intArray13);
        nonuniform.ArrayAverage arrayAverage15 = new nonuniform.ArrayAverage();
        int[] intArray20 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray25 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double26 = arrayAverage15.computeAverage(intArray20, intArray25);
        nonuniform.ArrayAverage arrayAverage27 = new nonuniform.ArrayAverage();
        int[] intArray32 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray37 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double38 = arrayAverage27.computeAverage(intArray32, intArray37);
        nonuniform.ArrayAverage arrayAverage39 = new nonuniform.ArrayAverage();
        int[] intArray44 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray49 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double50 = arrayAverage39.computeAverage(intArray44, intArray49);
        double double51 = arrayAverage15.computeAverage(intArray37, intArray49);
        double double52 = arrayAverage2.computeAverage(intArray13, intArray37);
        nonuniform.ArrayAverage arrayAverage53 = new nonuniform.ArrayAverage();
        int[] intArray58 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray63 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double64 = arrayAverage53.computeAverage(intArray58, intArray63);
        nonuniform.ArrayAverage arrayAverage65 = new nonuniform.ArrayAverage();
        int[] intArray70 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray75 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double76 = arrayAverage65.computeAverage(intArray70, intArray75);
        nonuniform.ArrayAverage arrayAverage77 = new nonuniform.ArrayAverage();
        int[] intArray82 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray87 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double88 = arrayAverage77.computeAverage(intArray82, intArray87);
        int[] intArray93 = new int[] { 100, '#', 'a', 10 };
        double double94 = arrayAverage65.computeAverage(intArray82, intArray93);
        double double95 = arrayAverage2.computeAverage(intArray63, intArray93);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray1, intArray93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 0.0d + "'", double88 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 31.0d + "'", double94 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 40.0d + "'", double95 == 40.0d);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray41, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray77);
        int[] intArray80 = null;
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray80, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 90.0d + "'", double66 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray94 = new int[] { (-1), (short) 1 };
        // The following exception was thrown during execution in test generation
        try {
            double double95 = arrayAverage0.computeAverage(intArray89, intArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray16 = new int[] { (-1), 10, '#', (byte) -1 };
        nonuniform.ArrayAverage arrayAverage17 = new nonuniform.ArrayAverage();
        int[] intArray22 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray27 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double28 = arrayAverage17.computeAverage(intArray22, intArray27);
        nonuniform.ArrayAverage arrayAverage29 = new nonuniform.ArrayAverage();
        int[] intArray34 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray39 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double40 = arrayAverage29.computeAverage(intArray34, intArray39);
        int[] intArray45 = new int[] { 100, '#', 'a', 10 };
        double double46 = arrayAverage17.computeAverage(intArray34, intArray45);
        nonuniform.ArrayAverage arrayAverage47 = new nonuniform.ArrayAverage();
        int[] intArray52 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray57 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double58 = arrayAverage47.computeAverage(intArray52, intArray57);
        nonuniform.ArrayAverage arrayAverage59 = new nonuniform.ArrayAverage();
        int[] intArray64 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray69 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double70 = arrayAverage59.computeAverage(intArray64, intArray69);
        double double71 = arrayAverage17.computeAverage(intArray57, intArray69);
        double double72 = arrayAverage0.computeAverage(intArray16, intArray69);
        java.lang.Class<?> wildcardClass73 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 31.0d + "'", double46 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        double double36 = arrayAverage0.computeAverage(intArray22, intArray34);
        int[] intArray37 = new int[] {};
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        nonuniform.ArrayAverage arrayAverage62 = new nonuniform.ArrayAverage();
        int[] intArray67 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray72 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double73 = arrayAverage62.computeAverage(intArray67, intArray72);
        double double74 = arrayAverage38.computeAverage(intArray60, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray37, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 100.0d + "'", double36 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 0.0d + "'", double73 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 100.0d + "'", double74 == 100.0d);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray16 = new int[] { (-1), 10, '#', (byte) -1 };
        nonuniform.ArrayAverage arrayAverage17 = new nonuniform.ArrayAverage();
        int[] intArray22 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray27 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double28 = arrayAverage17.computeAverage(intArray22, intArray27);
        nonuniform.ArrayAverage arrayAverage29 = new nonuniform.ArrayAverage();
        int[] intArray34 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray39 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double40 = arrayAverage29.computeAverage(intArray34, intArray39);
        int[] intArray45 = new int[] { 100, '#', 'a', 10 };
        double double46 = arrayAverage17.computeAverage(intArray34, intArray45);
        nonuniform.ArrayAverage arrayAverage47 = new nonuniform.ArrayAverage();
        int[] intArray52 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray57 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double58 = arrayAverage47.computeAverage(intArray52, intArray57);
        nonuniform.ArrayAverage arrayAverage59 = new nonuniform.ArrayAverage();
        int[] intArray64 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray69 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double70 = arrayAverage59.computeAverage(intArray64, intArray69);
        double double71 = arrayAverage17.computeAverage(intArray57, intArray69);
        double double72 = arrayAverage0.computeAverage(intArray16, intArray69);
        java.lang.Class<?> wildcardClass73 = intArray69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 31.0d + "'", double46 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        int[] intArray30 = new int[] { 100, '#', 'a', 10 };
        double double31 = arrayAverage2.computeAverage(intArray19, intArray30);
        nonuniform.ArrayAverage arrayAverage32 = new nonuniform.ArrayAverage();
        int[] intArray37 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray42 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double43 = arrayAverage32.computeAverage(intArray37, intArray42);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        double double68 = arrayAverage32.computeAverage(intArray54, intArray66);
        double double69 = arrayAverage1.computeAverage(intArray30, intArray66);
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double71 = arrayAverage0.computeAverage(intArray30, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.0d + "'", double31 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 99.0d + "'", double69 == 99.0d);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        java.lang.Class<?> wildcardClass69 = intArray53.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray16 = new int[] { (-1), 10, '#', (byte) -1 };
        nonuniform.ArrayAverage arrayAverage17 = new nonuniform.ArrayAverage();
        int[] intArray22 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray27 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double28 = arrayAverage17.computeAverage(intArray22, intArray27);
        nonuniform.ArrayAverage arrayAverage29 = new nonuniform.ArrayAverage();
        int[] intArray34 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray39 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double40 = arrayAverage29.computeAverage(intArray34, intArray39);
        int[] intArray45 = new int[] { 100, '#', 'a', 10 };
        double double46 = arrayAverage17.computeAverage(intArray34, intArray45);
        nonuniform.ArrayAverage arrayAverage47 = new nonuniform.ArrayAverage();
        int[] intArray52 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray57 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double58 = arrayAverage47.computeAverage(intArray52, intArray57);
        nonuniform.ArrayAverage arrayAverage59 = new nonuniform.ArrayAverage();
        int[] intArray64 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray69 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double70 = arrayAverage59.computeAverage(intArray64, intArray69);
        double double71 = arrayAverage17.computeAverage(intArray57, intArray69);
        double double72 = arrayAverage0.computeAverage(intArray16, intArray69);
        java.lang.Class<?> wildcardClass73 = intArray16.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 31.0d + "'", double46 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray72);
        java.lang.Class<?> wildcardClass80 = intArray59.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 90.0d + "'", double79 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray72);
        java.lang.Class<?> wildcardClass80 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 90.0d + "'", double79 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray16 = new int[] { (-1), 10, '#', (byte) -1 };
        nonuniform.ArrayAverage arrayAverage17 = new nonuniform.ArrayAverage();
        int[] intArray22 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray27 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double28 = arrayAverage17.computeAverage(intArray22, intArray27);
        nonuniform.ArrayAverage arrayAverage29 = new nonuniform.ArrayAverage();
        int[] intArray34 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray39 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double40 = arrayAverage29.computeAverage(intArray34, intArray39);
        int[] intArray45 = new int[] { 100, '#', 'a', 10 };
        double double46 = arrayAverage17.computeAverage(intArray34, intArray45);
        nonuniform.ArrayAverage arrayAverage47 = new nonuniform.ArrayAverage();
        int[] intArray52 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray57 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double58 = arrayAverage47.computeAverage(intArray52, intArray57);
        nonuniform.ArrayAverage arrayAverage59 = new nonuniform.ArrayAverage();
        int[] intArray64 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray69 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double70 = arrayAverage59.computeAverage(intArray64, intArray69);
        double double71 = arrayAverage17.computeAverage(intArray57, intArray69);
        double double72 = arrayAverage0.computeAverage(intArray16, intArray69);
        int[] intArray73 = null;
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray73, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double28 + "' != '" + 0.0d + "'", double28 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double40 + "' != '" + 0.0d + "'", double40 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double46 + "' != '" + 31.0d + "'", double46 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double58 + "' != '" + 0.0d + "'", double58 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double70 + "' != '" + 0.0d + "'", double70 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 100.0d + "'", double71 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + (-1.0d) + "'", double72 == (-1.0d));
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        double double66 = arrayAverage12.computeAverage(intArray52, intArray59);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage0.computeAverage(intArray59, intArray72);
        java.lang.Class<?> wildcardClass80 = intArray72.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 90.0d + "'", double79 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        int[] intArray51 = null;
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        int[] intArray80 = new int[] { 100, '#', 'a', 10 };
        double double81 = arrayAverage52.computeAverage(intArray69, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray51, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 31.0d + "'", double81 == 31.0d);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        int[] intArray30 = new int[] { 100, '#', 'a', 10 };
        double double31 = arrayAverage2.computeAverage(intArray19, intArray30);
        nonuniform.ArrayAverage arrayAverage32 = new nonuniform.ArrayAverage();
        int[] intArray37 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray42 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double43 = arrayAverage32.computeAverage(intArray37, intArray42);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        double double56 = arrayAverage2.computeAverage(intArray42, intArray49);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        int[] intArray85 = new int[] { 100, '#', 'a', 10 };
        double double86 = arrayAverage57.computeAverage(intArray74, intArray85);
        double double87 = arrayAverage1.computeAverage(intArray49, intArray74);
        int[] intArray88 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray74, intArray88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.0d + "'", double31 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 0.0d + "'", double56 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 31.0d + "'", double86 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 90.0d + "'", double87 == 90.0d);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        int[] intArray73 = null;
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray73, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray59);
        int[] intArray73 = null;
        int[] intArray75 = new int[] { (short) 0 };
        // The following exception was thrown during execution in test generation
        try {
            double double76 = arrayAverage0.computeAverage(intArray73, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 90.0d + "'", double72 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray30 = null;
        nonuniform.ArrayAverage arrayAverage31 = new nonuniform.ArrayAverage();
        int[] intArray36 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray41 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double42 = arrayAverage31.computeAverage(intArray36, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        int[] intArray59 = new int[] { 100, '#', 'a', 10 };
        double double60 = arrayAverage31.computeAverage(intArray48, intArray59);
        nonuniform.ArrayAverage arrayAverage61 = new nonuniform.ArrayAverage();
        int[] intArray66 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray71 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double72 = arrayAverage61.computeAverage(intArray66, intArray71);
        nonuniform.ArrayAverage arrayAverage73 = new nonuniform.ArrayAverage();
        int[] intArray78 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray83 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double84 = arrayAverage73.computeAverage(intArray78, intArray83);
        double double85 = arrayAverage31.computeAverage(intArray71, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray30, intArray71);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 0.0d + "'", double42 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 31.0d + "'", double60 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 0.0d + "'", double72 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 0.0d + "'", double84 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 0.0d + "'", double85 == 0.0d);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        double double50 = arrayAverage14.computeAverage(intArray36, intArray48);
        double double51 = arrayAverage1.computeAverage(intArray12, intArray36);
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        nonuniform.ArrayAverage arrayAverage76 = new nonuniform.ArrayAverage();
        int[] intArray81 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray86 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double87 = arrayAverage76.computeAverage(intArray81, intArray86);
        int[] intArray92 = new int[] { 100, '#', 'a', 10 };
        double double93 = arrayAverage64.computeAverage(intArray81, intArray92);
        double double94 = arrayAverage1.computeAverage(intArray62, intArray92);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray62, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 0.0d + "'", double87 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 31.0d + "'", double93 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 40.0d + "'", double94 == 40.0d);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray12 = null;
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        int[] intArray42 = new int[] { 100, '#', 'a', 10 };
        double double43 = arrayAverage14.computeAverage(intArray31, intArray42);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        double double80 = arrayAverage44.computeAverage(intArray66, intArray78);
        double double81 = arrayAverage13.computeAverage(intArray42, intArray78);
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray12, intArray78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 99.0d + "'", double81 == 99.0d);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray72, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        int[] intArray51 = null;
        int[] intArray52 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double53 = arrayAverage0.computeAverage(intArray51, intArray52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray89, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        int[] intArray54 = new int[] { 100, '#', 'a', 10 };
        double double55 = arrayAverage26.computeAverage(intArray43, intArray54);
        double double56 = arrayAverage13.computeAverage(intArray19, intArray54);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        double double69 = arrayAverage1.computeAverage(intArray19, intArray62);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray62, intArray75);
        java.lang.Class<?> wildcardClass83 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 31.0d + "'", double56 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 90.0d + "'", double69 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 90.0d + "'", double82 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        double double50 = arrayAverage14.computeAverage(intArray36, intArray48);
        double double51 = arrayAverage1.computeAverage(intArray12, intArray36);
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        int[] intArray80 = new int[] { 100, '#', 'a', 10 };
        double double81 = arrayAverage52.computeAverage(intArray69, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray12, intArray80);
        java.lang.Class<?> wildcardClass83 = intArray80.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 31.0d + "'", double81 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 40.0d + "'", double82 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray29, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray77, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 90.0d + "'", double54 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        int[] intArray54 = new int[] { 100, '#', 'a', 10 };
        double double55 = arrayAverage26.computeAverage(intArray43, intArray54);
        double double56 = arrayAverage13.computeAverage(intArray19, intArray54);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        double double69 = arrayAverage1.computeAverage(intArray19, intArray62);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray62, intArray75);
        java.lang.Class<?> wildcardClass83 = intArray62.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 31.0d + "'", double56 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 90.0d + "'", double69 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 90.0d + "'", double82 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        int[] intArray54 = new int[] { 100, '#', 'a', 10 };
        double double55 = arrayAverage26.computeAverage(intArray43, intArray54);
        double double56 = arrayAverage13.computeAverage(intArray19, intArray54);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        double double69 = arrayAverage1.computeAverage(intArray19, intArray62);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray62, intArray75);
        java.lang.Class<?> wildcardClass83 = intArray75.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 31.0d + "'", double56 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 90.0d + "'", double69 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 90.0d + "'", double82 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        double double50 = arrayAverage14.computeAverage(intArray36, intArray48);
        double double51 = arrayAverage1.computeAverage(intArray12, intArray36);
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        int[] intArray80 = new int[] { 100, '#', 'a', 10 };
        double double81 = arrayAverage52.computeAverage(intArray69, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray12, intArray80);
        java.lang.Class<?> wildcardClass83 = intArray12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 31.0d + "'", double81 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 40.0d + "'", double82 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray52);
        int[] intArray55 = null;
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        // The following exception was thrown during execution in test generation
        try {
            double double68 = arrayAverage0.computeAverage(intArray55, intArray61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 100.0d + "'", double54 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        int[] intArray8 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray13 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double14 = arrayAverage3.computeAverage(intArray8, intArray13);
        nonuniform.ArrayAverage arrayAverage15 = new nonuniform.ArrayAverage();
        int[] intArray20 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray25 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double26 = arrayAverage15.computeAverage(intArray20, intArray25);
        nonuniform.ArrayAverage arrayAverage27 = new nonuniform.ArrayAverage();
        int[] intArray32 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray37 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double38 = arrayAverage27.computeAverage(intArray32, intArray37);
        nonuniform.ArrayAverage arrayAverage39 = new nonuniform.ArrayAverage();
        int[] intArray44 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray49 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double50 = arrayAverage39.computeAverage(intArray44, intArray49);
        double double51 = arrayAverage15.computeAverage(intArray37, intArray49);
        double double52 = arrayAverage2.computeAverage(intArray13, intArray37);
        nonuniform.ArrayAverage arrayAverage53 = new nonuniform.ArrayAverage();
        int[] intArray58 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray63 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double64 = arrayAverage53.computeAverage(intArray58, intArray63);
        nonuniform.ArrayAverage arrayAverage65 = new nonuniform.ArrayAverage();
        int[] intArray70 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray75 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double76 = arrayAverage65.computeAverage(intArray70, intArray75);
        int[] intArray81 = new int[] { 100, '#', 'a', 10 };
        double double82 = arrayAverage53.computeAverage(intArray70, intArray81);
        double double83 = arrayAverage1.computeAverage(intArray13, intArray81);
        int[] intArray84 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double85 = arrayAverage0.computeAverage(intArray13, intArray84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 0.0d + "'", double50 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double64 + "' != '" + 0.0d + "'", double64 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double76 + "' != '" + 0.0d + "'", double76 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 31.0d + "'", double82 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 40.0d + "'", double83 == 40.0d);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        double double50 = arrayAverage14.computeAverage(intArray36, intArray48);
        double double51 = arrayAverage1.computeAverage(intArray12, intArray36);
        nonuniform.ArrayAverage arrayAverage52 = new nonuniform.ArrayAverage();
        int[] intArray57 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray62 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double63 = arrayAverage52.computeAverage(intArray57, intArray62);
        nonuniform.ArrayAverage arrayAverage64 = new nonuniform.ArrayAverage();
        int[] intArray69 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray74 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double75 = arrayAverage64.computeAverage(intArray69, intArray74);
        int[] intArray80 = new int[] { 100, '#', 'a', 10 };
        double double81 = arrayAverage52.computeAverage(intArray69, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray12, intArray80);
        java.lang.Class<?> wildcardClass83 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 100.0d + "'", double51 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double63 + "' != '" + 0.0d + "'", double63 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double75 + "' != '" + 0.0d + "'", double75 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 31.0d + "'", double81 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 40.0d + "'", double82 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray14 = new int[] { 10, 0 };
        int[] intArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double16 = arrayAverage0.computeAverage(intArray14, intArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray14);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        int[] intArray17 = new int[] { (-1), 10, '#', (byte) -1 };
        nonuniform.ArrayAverage arrayAverage18 = new nonuniform.ArrayAverage();
        int[] intArray23 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray28 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double29 = arrayAverage18.computeAverage(intArray23, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        int[] intArray46 = new int[] { 100, '#', 'a', 10 };
        double double47 = arrayAverage18.computeAverage(intArray35, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        nonuniform.ArrayAverage arrayAverage60 = new nonuniform.ArrayAverage();
        int[] intArray65 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray70 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double71 = arrayAverage60.computeAverage(intArray65, intArray70);
        double double72 = arrayAverage18.computeAverage(intArray58, intArray70);
        double double73 = arrayAverage1.computeAverage(intArray17, intArray70);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray70, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 0.0d + "'", double29 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 31.0d + "'", double47 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 0.0d + "'", double71 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 100.0d + "'", double72 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + (-1.0d) + "'", double73 == (-1.0d));
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage4 = new nonuniform.ArrayAverage();
        int[] intArray9 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray14 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double15 = arrayAverage4.computeAverage(intArray9, intArray14);
        nonuniform.ArrayAverage arrayAverage16 = new nonuniform.ArrayAverage();
        int[] intArray21 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray26 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double27 = arrayAverage16.computeAverage(intArray21, intArray26);
        nonuniform.ArrayAverage arrayAverage28 = new nonuniform.ArrayAverage();
        int[] intArray33 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray38 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double39 = arrayAverage28.computeAverage(intArray33, intArray38);
        nonuniform.ArrayAverage arrayAverage40 = new nonuniform.ArrayAverage();
        int[] intArray45 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray50 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double51 = arrayAverage40.computeAverage(intArray45, intArray50);
        double double52 = arrayAverage16.computeAverage(intArray38, intArray50);
        double double53 = arrayAverage3.computeAverage(intArray14, intArray38);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        int[] intArray82 = new int[] { 100, '#', 'a', 10 };
        double double83 = arrayAverage54.computeAverage(intArray71, intArray82);
        double double84 = arrayAverage2.computeAverage(intArray14, intArray82);
        // The following exception was thrown during execution in test generation
        try {
            double double85 = arrayAverage0.computeAverage(intArray1, intArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double15 + "' != '" + 0.0d + "'", double15 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double27 + "' != '" + 0.0d + "'", double27 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double39 + "' != '" + 0.0d + "'", double39 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double51 + "' != '" + 0.0d + "'", double51 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double52 + "' != '" + 100.0d + "'", double52 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 100.0d + "'", double53 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 31.0d + "'", double83 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 40.0d + "'", double84 == 40.0d);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        int[] intArray54 = new int[] { 100, '#', 'a', 10 };
        double double55 = arrayAverage26.computeAverage(intArray43, intArray54);
        double double56 = arrayAverage13.computeAverage(intArray19, intArray54);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        double double69 = arrayAverage1.computeAverage(intArray19, intArray62);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        double double82 = arrayAverage0.computeAverage(intArray62, intArray75);
        int[] intArray83 = null;
        int[] intArray86 = new int[] { ' ', (byte) 10 };
        // The following exception was thrown during execution in test generation
        try {
            double double87 = arrayAverage0.computeAverage(intArray83, intArray86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 31.0d + "'", double56 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 90.0d + "'", double69 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double82 + "' != '" + 90.0d + "'", double82 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        int[] intArray82 = new int[] { 100, '#', 'a', 10 };
        double double83 = arrayAverage54.computeAverage(intArray71, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray71, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray71);
        java.lang.Class<?> wildcardClass98 = intArray71.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 31.0d + "'", double83 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        int[] intArray82 = new int[] { 100, '#', 'a', 10 };
        double double83 = arrayAverage54.computeAverage(intArray71, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray71, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray71);
        java.lang.Class<?> wildcardClass98 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 31.0d + "'", double83 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        int[] intArray82 = new int[] { 100, '#', 'a', 10 };
        double double83 = arrayAverage54.computeAverage(intArray71, intArray82);
        nonuniform.ArrayAverage arrayAverage84 = new nonuniform.ArrayAverage();
        int[] intArray89 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray94 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double95 = arrayAverage84.computeAverage(intArray89, intArray94);
        double double96 = arrayAverage42.computeAverage(intArray71, intArray89);
        double double97 = arrayAverage0.computeAverage(intArray29, intArray71);
        java.lang.Class<?> wildcardClass98 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double83 + "' != '" + 31.0d + "'", double83 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 0.0d + "'", double95 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double96 + "' != '" + 90.0d + "'", double96 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double97 + "' != '" + 90.0d + "'", double97 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass98);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        double double60 = arrayAverage24.computeAverage(intArray46, intArray58);
        double double61 = arrayAverage0.computeAverage(intArray17, intArray46);
        java.lang.Class<?> wildcardClass62 = intArray17.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        double double60 = arrayAverage24.computeAverage(intArray46, intArray58);
        double double61 = arrayAverage0.computeAverage(intArray17, intArray46);
        java.lang.Class<?> wildcardClass62 = intArray46.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray12 = null;
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        int[] intArray54 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray59 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double60 = arrayAverage49.computeAverage(intArray54, intArray59);
        int[] intArray65 = new int[] { 100, '#', 'a', 10 };
        double double66 = arrayAverage37.computeAverage(intArray54, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage25.computeAverage(intArray54, intArray72);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage13.computeAverage(intArray72, intArray90);
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray12, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 31.0d + "'", double66 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 90.0d + "'", double79 == 90.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        nonuniform.ArrayAverage arrayAverage48 = new nonuniform.ArrayAverage();
        int[] intArray53 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray58 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double59 = arrayAverage48.computeAverage(intArray53, intArray58);
        double double60 = arrayAverage24.computeAverage(intArray46, intArray58);
        double double61 = arrayAverage0.computeAverage(intArray17, intArray46);
        java.lang.Class<?> wildcardClass62 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double59 + "' != '" + 0.0d + "'", double59 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 100.0d + "'", double60 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        int[] intArray79 = new int[] { 100, '#', 'a', 10 };
        double double80 = arrayAverage51.computeAverage(intArray68, intArray79);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray68, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 31.0d + "'", double80 == 31.0d);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        int[] intArray7 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray12 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double13 = arrayAverage2.computeAverage(intArray7, intArray12);
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        int[] intArray30 = new int[] { 100, '#', 'a', 10 };
        double double31 = arrayAverage2.computeAverage(intArray19, intArray30);
        nonuniform.ArrayAverage arrayAverage32 = new nonuniform.ArrayAverage();
        int[] intArray37 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray42 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double43 = arrayAverage32.computeAverage(intArray37, intArray42);
        nonuniform.ArrayAverage arrayAverage44 = new nonuniform.ArrayAverage();
        int[] intArray49 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray54 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double55 = arrayAverage44.computeAverage(intArray49, intArray54);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        int[] intArray72 = new int[] { 100, '#', 'a', 10 };
        double double73 = arrayAverage44.computeAverage(intArray61, intArray72);
        double double74 = arrayAverage2.computeAverage(intArray42, intArray72);
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray1, intArray72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double13 + "' != '" + 0.0d + "'", double13 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double31 + "' != '" + 31.0d + "'", double31 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 0.0d + "'", double43 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 0.0d + "'", double55 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 31.0d + "'", double73 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 40.0d + "'", double74 == 40.0d);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray11, intArray65);
        java.lang.Class<?> wildcardClass69 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        double double49 = arrayAverage13.computeAverage(intArray35, intArray47);
        double double50 = arrayAverage0.computeAverage(intArray11, intArray35);
        nonuniform.ArrayAverage arrayAverage51 = new nonuniform.ArrayAverage();
        int[] intArray56 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray61 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double62 = arrayAverage51.computeAverage(intArray56, intArray61);
        nonuniform.ArrayAverage arrayAverage63 = new nonuniform.ArrayAverage();
        int[] intArray68 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray73 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double74 = arrayAverage63.computeAverage(intArray68, intArray73);
        nonuniform.ArrayAverage arrayAverage75 = new nonuniform.ArrayAverage();
        int[] intArray80 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray85 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double86 = arrayAverage75.computeAverage(intArray80, intArray85);
        int[] intArray91 = new int[] { 100, '#', 'a', 10 };
        double double92 = arrayAverage63.computeAverage(intArray80, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray61, intArray91);
        int[] intArray96 = new int[] { 0, (short) 10 };
        int[] intArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double98 = arrayAverage0.computeAverage(intArray96, intArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 100.0d + "'", double49 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double50 + "' != '" + 100.0d + "'", double50 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 0.0d + "'", double62 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double74 + "' != '" + 0.0d + "'", double74 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double86 + "' != '" + 0.0d + "'", double86 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 31.0d + "'", double92 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 40.0d + "'", double93 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray96);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray11, intArray65);
        java.lang.Class<?> wildcardClass69 = intArray11.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray11, intArray65);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray74, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray65);
        double double68 = arrayAverage0.computeAverage(intArray11, intArray65);
        java.lang.Class<?> wildcardClass69 = intArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 100.0d + "'", double67 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 100.0d + "'", double68 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass69);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray70);
        java.lang.Class<?> wildcardClass73 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 31.0d + "'", double72 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray40, intArray70);
        int[] intArray73 = null;
        int[] intArray75 = new int[] { (short) 1 };
        // The following exception was thrown during execution in test generation
        try {
            double double76 = arrayAverage0.computeAverage(intArray73, intArray75);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 40.0d + "'", double72 == 40.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray70);
        java.lang.Class<?> wildcardClass73 = intArray70.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 31.0d + "'", double72 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        int[] intArray40 = new int[] { 100, '#', 'a', 10 };
        double double41 = arrayAverage12.computeAverage(intArray29, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        int[] intArray70 = new int[] { 100, '#', 'a', 10 };
        double double71 = arrayAverage42.computeAverage(intArray59, intArray70);
        double double72 = arrayAverage0.computeAverage(intArray29, intArray70);
        java.lang.Class<?> wildcardClass73 = intArray29.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 31.0d + "'", double41 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double71 + "' != '" + 31.0d + "'", double71 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 31.0d + "'", double72 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        nonuniform.ArrayAverage arrayAverage49 = new nonuniform.ArrayAverage();
        int[] intArray54 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray59 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double60 = arrayAverage49.computeAverage(intArray54, intArray59);
        double double61 = arrayAverage25.computeAverage(intArray47, intArray59);
        double double62 = arrayAverage12.computeAverage(intArray23, intArray47);
        int[] intArray63 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double64 = arrayAverage0.computeAverage(intArray47, intArray63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double60 + "' != '" + 0.0d + "'", double60 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 100.0d + "'", double61 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double62 + "' != '" + 100.0d + "'", double62 == 100.0d);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        int[] intArray85 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray83, intArray85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        int[] intArray71 = new int[] { 100, '#', 'a', 10 };
        double double72 = arrayAverage43.computeAverage(intArray60, intArray71);
        double double73 = arrayAverage1.computeAverage(intArray30, intArray60);
        int[] intArray74 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double75 = arrayAverage0.computeAverage(intArray60, intArray74);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double72 + "' != '" + 31.0d + "'", double72 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double73 + "' != '" + 90.0d + "'", double73 == 90.0d);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        int[] intArray67 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double68 = arrayAverage0.computeAverage(intArray60, intArray67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        int[] intArray30 = null;
        int[] intArray31 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double32 = arrayAverage0.computeAverage(intArray30, intArray31);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage43.computeAverage(intArray65, intArray77);
        double double80 = arrayAverage1.computeAverage(intArray30, intArray65);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray65, intArray91);
        java.lang.Class<?> wildcardClass94 = intArray91.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage43.computeAverage(intArray65, intArray77);
        double double80 = arrayAverage1.computeAverage(intArray30, intArray65);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray65, intArray91);
        java.lang.Class<?> wildcardClass94 = intArray65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        int[] intArray2 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double3 = arrayAverage0.computeAverage(intArray1, intArray2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage43.computeAverage(intArray65, intArray77);
        double double80 = arrayAverage1.computeAverage(intArray30, intArray65);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray65, intArray91);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        double double92 = arrayAverage42.computeAverage(intArray53, intArray77);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray53);
        int[] intArray94 = null;
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray94, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 100.0d + "'", double92 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage14 = new nonuniform.ArrayAverage();
        int[] intArray19 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray24 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double25 = arrayAverage14.computeAverage(intArray19, intArray24);
        nonuniform.ArrayAverage arrayAverage26 = new nonuniform.ArrayAverage();
        int[] intArray31 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray36 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double37 = arrayAverage26.computeAverage(intArray31, intArray36);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        int[] intArray54 = new int[] { 100, '#', 'a', 10 };
        double double55 = arrayAverage26.computeAverage(intArray43, intArray54);
        double double56 = arrayAverage13.computeAverage(intArray19, intArray54);
        nonuniform.ArrayAverage arrayAverage57 = new nonuniform.ArrayAverage();
        int[] intArray62 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray67 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double68 = arrayAverage57.computeAverage(intArray62, intArray67);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage57.computeAverage(intArray79, intArray91);
        double double94 = arrayAverage1.computeAverage(intArray19, intArray79);
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray19, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double25 + "' != '" + 0.0d + "'", double25 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 0.0d + "'", double37 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double56 + "' != '" + 31.0d + "'", double56 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 0.0d + "'", double94 == 0.0d);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        int[] intArray44 = null;
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage46 = new nonuniform.ArrayAverage();
        int[] intArray51 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray56 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double57 = arrayAverage46.computeAverage(intArray51, intArray56);
        nonuniform.ArrayAverage arrayAverage58 = new nonuniform.ArrayAverage();
        int[] intArray63 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray68 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double69 = arrayAverage58.computeAverage(intArray63, intArray68);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        nonuniform.ArrayAverage arrayAverage82 = new nonuniform.ArrayAverage();
        int[] intArray87 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray92 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double93 = arrayAverage82.computeAverage(intArray87, intArray92);
        double double94 = arrayAverage58.computeAverage(intArray80, intArray92);
        double double95 = arrayAverage45.computeAverage(intArray56, intArray80);
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray44, intArray80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double94 + "' != '" + 100.0d + "'", double94 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double95 + "' != '" + 100.0d + "'", double95 == 100.0d);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        int[] intArray28 = new int[] { 100, '#', 'a', 10 };
        double double29 = arrayAverage0.computeAverage(intArray17, intArray28);
        nonuniform.ArrayAverage arrayAverage30 = new nonuniform.ArrayAverage();
        int[] intArray35 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray40 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double41 = arrayAverage30.computeAverage(intArray35, intArray40);
        nonuniform.ArrayAverage arrayAverage42 = new nonuniform.ArrayAverage();
        int[] intArray47 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray52 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double53 = arrayAverage42.computeAverage(intArray47, intArray52);
        double double54 = arrayAverage0.computeAverage(intArray40, intArray47);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        nonuniform.ArrayAverage arrayAverage79 = new nonuniform.ArrayAverage();
        int[] intArray84 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray89 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double90 = arrayAverage79.computeAverage(intArray84, intArray89);
        double double91 = arrayAverage55.computeAverage(intArray77, intArray89);
        int[] intArray92 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double93 = arrayAverage0.computeAverage(intArray77, intArray92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double29 + "' != '" + 31.0d + "'", double29 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double41 + "' != '" + 0.0d + "'", double41 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 0.0d + "'", double53 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double90 + "' != '" + 0.0d + "'", double90 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 100.0d + "'", double91 == 100.0d);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        int[] intArray12 = null;
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        int[] intArray83 = new int[] { 100, '#', 'a', 10 };
        double double84 = arrayAverage55.computeAverage(intArray72, intArray83);
        double double85 = arrayAverage13.computeAverage(intArray53, intArray83);
        // The following exception was thrown during execution in test generation
        try {
            double double86 = arrayAverage0.computeAverage(intArray12, intArray83);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double84 + "' != '" + 31.0d + "'", double84 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double85 + "' != '" + 40.0d + "'", double85 == 40.0d);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage24.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray22, intArray76);
        java.lang.Class<?> wildcardClass80 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray79, intArray86);
        java.lang.Class<?> wildcardClass94 = arrayAverage0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray1 = null;
        nonuniform.ArrayAverage arrayAverage2 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage3 = new nonuniform.ArrayAverage();
        int[] intArray8 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray13 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double14 = arrayAverage3.computeAverage(intArray8, intArray13);
        nonuniform.ArrayAverage arrayAverage15 = new nonuniform.ArrayAverage();
        int[] intArray20 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray25 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double26 = arrayAverage15.computeAverage(intArray20, intArray25);
        nonuniform.ArrayAverage arrayAverage27 = new nonuniform.ArrayAverage();
        int[] intArray32 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray37 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double38 = arrayAverage27.computeAverage(intArray32, intArray37);
        int[] intArray43 = new int[] { 100, '#', 'a', 10 };
        double double44 = arrayAverage15.computeAverage(intArray32, intArray43);
        double double45 = arrayAverage2.computeAverage(intArray8, intArray43);
        // The following exception was thrown during execution in test generation
        try {
            double double46 = arrayAverage0.computeAverage(intArray1, intArray43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double14 + "' != '" + 0.0d + "'", double14 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double26 + "' != '" + 0.0d + "'", double26 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double38 + "' != '" + 0.0d + "'", double38 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double44 + "' != '" + 31.0d + "'", double44 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double45 + "' != '" + 31.0d + "'", double45 == 31.0d);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        double double55 = arrayAverage12.computeAverage(intArray18, intArray53);
        nonuniform.ArrayAverage arrayAverage56 = new nonuniform.ArrayAverage();
        int[] intArray61 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray66 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double67 = arrayAverage56.computeAverage(intArray61, intArray66);
        double double68 = arrayAverage0.computeAverage(intArray18, intArray61);
        int[] intArray69 = null;
        int[] intArray70 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double71 = arrayAverage0.computeAverage(intArray69, intArray70);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double55 + "' != '" + 31.0d + "'", double55 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 90.0d + "'", double68 == 90.0d);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        nonuniform.ArrayAverage arrayAverage37 = new nonuniform.ArrayAverage();
        int[] intArray42 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray47 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double48 = arrayAverage37.computeAverage(intArray42, intArray47);
        int[] intArray53 = new int[] { 100, '#', 'a', 10 };
        double double54 = arrayAverage25.computeAverage(intArray42, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        nonuniform.ArrayAverage arrayAverage67 = new nonuniform.ArrayAverage();
        int[] intArray72 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray77 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double78 = arrayAverage67.computeAverage(intArray72, intArray77);
        double double79 = arrayAverage25.computeAverage(intArray65, intArray77);
        double double80 = arrayAverage12.computeAverage(intArray23, intArray77);
        int[] intArray81 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double82 = arrayAverage0.computeAverage(intArray77, intArray81);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double48 + "' != '" + 0.0d + "'", double48 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 31.0d + "'", double54 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 0.0d + "'", double78 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 100.0d + "'", double80 == 100.0d);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray79, intArray86);
        java.lang.Class<?> wildcardClass94 = intArray86.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        double double43 = arrayAverage0.computeAverage(intArray6, intArray41);
        int[] intArray44 = null;
        nonuniform.ArrayAverage arrayAverage45 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage46 = new nonuniform.ArrayAverage();
        int[] intArray51 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray56 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double57 = arrayAverage46.computeAverage(intArray51, intArray56);
        nonuniform.ArrayAverage arrayAverage58 = new nonuniform.ArrayAverage();
        int[] intArray63 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray68 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double69 = arrayAverage58.computeAverage(intArray63, intArray68);
        nonuniform.ArrayAverage arrayAverage70 = new nonuniform.ArrayAverage();
        int[] intArray75 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray80 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double81 = arrayAverage70.computeAverage(intArray75, intArray80);
        int[] intArray86 = new int[] { 100, '#', 'a', 10 };
        double double87 = arrayAverage58.computeAverage(intArray75, intArray86);
        double double88 = arrayAverage45.computeAverage(intArray51, intArray86);
        // The following exception was thrown during execution in test generation
        try {
            double double89 = arrayAverage0.computeAverage(intArray44, intArray51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double43 + "' != '" + 31.0d + "'", double43 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double57 + "' != '" + 0.0d + "'", double57 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double69 + "' != '" + 0.0d + "'", double69 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double81 + "' != '" + 0.0d + "'", double81 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double87 + "' != '" + 31.0d + "'", double87 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double88 + "' != '" + 31.0d + "'", double88 == 31.0d);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage24.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray22, intArray76);
        java.lang.Class<?> wildcardClass80 = intArray22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        int[] intArray5 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray10 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double11 = arrayAverage0.computeAverage(intArray5, intArray10);
        nonuniform.ArrayAverage arrayAverage12 = new nonuniform.ArrayAverage();
        int[] intArray17 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray22 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double23 = arrayAverage12.computeAverage(intArray17, intArray22);
        nonuniform.ArrayAverage arrayAverage24 = new nonuniform.ArrayAverage();
        int[] intArray29 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray34 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double35 = arrayAverage24.computeAverage(intArray29, intArray34);
        nonuniform.ArrayAverage arrayAverage36 = new nonuniform.ArrayAverage();
        int[] intArray41 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray46 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double47 = arrayAverage36.computeAverage(intArray41, intArray46);
        int[] intArray52 = new int[] { 100, '#', 'a', 10 };
        double double53 = arrayAverage24.computeAverage(intArray41, intArray52);
        nonuniform.ArrayAverage arrayAverage54 = new nonuniform.ArrayAverage();
        int[] intArray59 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray64 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double65 = arrayAverage54.computeAverage(intArray59, intArray64);
        nonuniform.ArrayAverage arrayAverage66 = new nonuniform.ArrayAverage();
        int[] intArray71 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray76 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double77 = arrayAverage66.computeAverage(intArray71, intArray76);
        double double78 = arrayAverage24.computeAverage(intArray64, intArray76);
        double double79 = arrayAverage0.computeAverage(intArray22, intArray76);
        java.lang.Class<?> wildcardClass80 = intArray76.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double11 + "' != '" + 0.0d + "'", double11 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double23 + "' != '" + 0.0d + "'", double23 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double35 + "' != '" + 0.0d + "'", double35 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double47 + "' != '" + 0.0d + "'", double47 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double53 + "' != '" + 31.0d + "'", double53 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double65 + "' != '" + 0.0d + "'", double65 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double77 + "' != '" + 0.0d + "'", double77 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double78 + "' != '" + 100.0d + "'", double78 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 100.0d + "'", double79 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        int[] intArray41 = new int[] { 100, '#', 'a', 10 };
        double double42 = arrayAverage13.computeAverage(intArray30, intArray41);
        nonuniform.ArrayAverage arrayAverage43 = new nonuniform.ArrayAverage();
        int[] intArray48 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray53 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double54 = arrayAverage43.computeAverage(intArray48, intArray53);
        nonuniform.ArrayAverage arrayAverage55 = new nonuniform.ArrayAverage();
        int[] intArray60 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray65 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double66 = arrayAverage55.computeAverage(intArray60, intArray65);
        double double67 = arrayAverage13.computeAverage(intArray53, intArray60);
        double double68 = arrayAverage0.computeAverage(intArray6, intArray53);
        nonuniform.ArrayAverage arrayAverage69 = new nonuniform.ArrayAverage();
        int[] intArray74 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray79 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double80 = arrayAverage69.computeAverage(intArray74, intArray79);
        nonuniform.ArrayAverage arrayAverage81 = new nonuniform.ArrayAverage();
        int[] intArray86 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray91 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double92 = arrayAverage81.computeAverage(intArray86, intArray91);
        double double93 = arrayAverage0.computeAverage(intArray79, intArray86);
        java.lang.Class<?> wildcardClass94 = intArray79.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double42 + "' != '" + 31.0d + "'", double42 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double54 + "' != '" + 0.0d + "'", double54 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double66 + "' != '" + 0.0d + "'", double66 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 0.0d + "'", double67 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double68 + "' != '" + 0.0d + "'", double68 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double80 + "' != '" + 0.0d + "'", double80 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 0.0d + "'", double93 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        nonuniform.ArrayAverage arrayAverage0 = new nonuniform.ArrayAverage();
        nonuniform.ArrayAverage arrayAverage1 = new nonuniform.ArrayAverage();
        int[] intArray6 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray11 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double12 = arrayAverage1.computeAverage(intArray6, intArray11);
        nonuniform.ArrayAverage arrayAverage13 = new nonuniform.ArrayAverage();
        int[] intArray18 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray23 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double24 = arrayAverage13.computeAverage(intArray18, intArray23);
        nonuniform.ArrayAverage arrayAverage25 = new nonuniform.ArrayAverage();
        int[] intArray30 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray35 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double36 = arrayAverage25.computeAverage(intArray30, intArray35);
        double double37 = arrayAverage1.computeAverage(intArray23, intArray35);
        nonuniform.ArrayAverage arrayAverage38 = new nonuniform.ArrayAverage();
        int[] intArray43 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray48 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double49 = arrayAverage38.computeAverage(intArray43, intArray48);
        nonuniform.ArrayAverage arrayAverage50 = new nonuniform.ArrayAverage();
        int[] intArray55 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray60 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double61 = arrayAverage50.computeAverage(intArray55, intArray60);
        int[] intArray66 = new int[] { 100, '#', 'a', 10 };
        double double67 = arrayAverage38.computeAverage(intArray55, intArray66);
        nonuniform.ArrayAverage arrayAverage68 = new nonuniform.ArrayAverage();
        int[] intArray73 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray78 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double79 = arrayAverage68.computeAverage(intArray73, intArray78);
        nonuniform.ArrayAverage arrayAverage80 = new nonuniform.ArrayAverage();
        int[] intArray85 = new int[] { (byte) 0, 100, ' ', 100 };
        int[] intArray90 = new int[] { (byte) 100, 0, (short) -1, (short) 1 };
        double double91 = arrayAverage80.computeAverage(intArray85, intArray90);
        double double92 = arrayAverage38.computeAverage(intArray78, intArray85);
        double double93 = arrayAverage0.computeAverage(intArray35, intArray78);
        int[] intArray94 = null;
        int[] intArray95 = null;
        // The following exception was thrown during execution in test generation
        try {
            double double96 = arrayAverage0.computeAverage(intArray94, intArray95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double12 + "' != '" + 0.0d + "'", double12 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double24 + "' != '" + 0.0d + "'", double24 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double36 + "' != '" + 0.0d + "'", double36 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double37 + "' != '" + 100.0d + "'", double37 == 100.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double49 + "' != '" + 0.0d + "'", double49 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double61 + "' != '" + 0.0d + "'", double61 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double67 + "' != '" + 31.0d + "'", double67 == 31.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double79 + "' != '" + 0.0d + "'", double79 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(intArray90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double91 + "' != '" + 0.0d + "'", double91 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double92 + "' != '" + 0.0d + "'", double92 == 0.0d);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + double93 + "' != '" + 100.0d + "'", double93 == 100.0d);
    }
}

